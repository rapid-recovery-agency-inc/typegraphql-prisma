"use strict";(self.webpackChunktypegraphql_prisma_website=self.webpackChunktypegraphql_prisma_website||[]).push([[367],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>u});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),i=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},c=function(e){var r=i(e.components);return n.createElement(s.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=i(t),u=a,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||o;return t?n.createElement(f,l(l({ref:r},c),{},{components:t})):n.createElement(f,l({ref:r},c))}));function u(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=m;var p={};for(var s in r)hasOwnProperty.call(r,s)&&(p[s]=r[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var i=2;i<o;i++)l[i]=t[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7589:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>i});var n=t(7462),a=(t(7294),t(3905));const o={title:"Simple resolvers (performance)",sidebar_label:"Simple resolvers"},l=void 0,p={unversionedId:"advanced/simple-resolvers",id:"advanced/simple-resolvers",title:"Simple resolvers (performance)",description:"If you don't have any global middlewares and you want to tune the generated schema performance, you can turn on the simpleResolvers generator option:",source:"@site/../docs/advanced/simple-resolvers.md",sourceDirName:"advanced",slug:"/advanced/simple-resolvers",permalink:"/docs/advanced/simple-resolvers",draft:!1,editUrl:"https://github.com/MichalLytek/typegraphql-prisma/edit/main/docs/../docs/advanced/simple-resolvers.md",tags:[],version:"current",frontMatter:{title:"Simple resolvers (performance)",sidebar_label:"Simple resolvers"},sidebar:"docs",previous:{title:"Unchecked scalars input",permalink:"/docs/advanced/unchecked-scalars"},next:{title:"Emit ID type",permalink:"/docs/advanced/emit-id-type"}},s={},i=[],c={toc:i};function d(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"If you don't have any global middlewares and you want to tune the generated schema performance, you can turn on the ",(0,a.kt)("inlineCode",{parentName:"p"},"simpleResolvers")," generator option:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-prisma",metastring:"{3}","{3}":!0},'generator typegraphql {\n  provider        = "typegraphql-prisma"\n  simpleResolvers = true\n}\n')),(0,a.kt)("p",null,"It will generate then all the output type and model type classes with ",(0,a.kt)("inlineCode",{parentName:"p"},"simpleResolvers: true")," option of ",(0,a.kt)("inlineCode",{parentName:"p"},"@ObjectType")," decorator, ",(0,a.kt)("a",{parentName:"p",href:"https://typegraphql.com/docs/performance.html#further-performance-tweaks"},"which can improve performance of underlying field resolvers"),", e.g.:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{4}","{4}":!0},"@TypeGraphQL.ObjectType({\n  description: undefined,\n  simpleResolvers: true,\n})\nexport class BatchPayload {\n  @TypeGraphQL.Field(_type => TypeGraphQL.Int, {\n    nullable: false,\n    description: undefined,\n  })\n  count!: number;\n}\n")))}d.isMDXComponent=!0}}]);